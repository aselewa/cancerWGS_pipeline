#!/bin/python

import glob
import os

pd = config["proj_dir"]
fastq = pd + "fastq/"
aligned = pd + "aligned/"
output =  pd + "output/"
VCFs = output + "VCFs/"

# Make necessary directories
dir_log = pd + "log/"
if not os.path.isdir(dir_log):
    os.mkdir(dir_log)

tmp = pd + "tmp/"
if not os.path.isdir(tmp):
    os.mkdir(tmp)

## Files
REF_GENOME = config["REF_GENOME_DIR"]

## Global wildcards

#patient id
id = glob_wildcards(fastq + "{id}_tumor_R1.fastq.gz").id
type = glob_wildcards(fastq + "{id}_{type}_R1.fastq.gz").type

#chromosomes
chr = ["%.1d" % i for i in range(1,23)] + ['X','Y']

####### BEGIN
    
rule all:
    input:
        expand(output + "{id}_{type}_sorted_dedupped_calib.bam",id=id,type=type)

rule bwa:
    input:
        fastq + "{id}_{type}_R1.fastq.gz",
        fastq + "{id}_{type}_R2.fastq.gz"
    output:
        aligned + "{id}_{type}.bam"
    threads: 16
    shell:
        "bwa mem -M -t {threads} {REF_GENOME} {input[0]} {input[1]} | samtools view -bS - > {output}"

rule sort_bams:
    input:
        aligned + "{id}_{type}.bam"
    output:
        output + "{id}_{type}_sorted.bam"
    threads: 10
    shell:
        "samtools sort -@ {threads} -o {output} -O bam {input} -T {output}_temp"

rule remove_duplicates:
    input:
        aligned + "{id}_{type}_sorted.bam"
    output:
        output + "{id}_{type}_sorted_dedupped.bam"
    shell:
        "picard MarkDuplicates I={input} O={output} M={output}_metrics.txt -Xmx8G REMOVE_DUPLICATES=TRUE TMP_DIR={tmp} && samtools index {output}"

rule base_calibrate:
    input:
        output + "{id}_{type}_sorted_dedupped.bam",
        output + "{id}_{type}_sorted_dedupped.bam.bai"
    output:
        output + "{id}_{type}_recal_data.table"
    shell:
       "gatk --java-options '-Xmx8G -Djava.io.tmpdir={tmp}' BaseRecalibrator -I {input[0]} -R {REF_GENOME} -O {output} --known-sites {SITES_VAR}Mills_and_1000G_gold_standard.indels.b37.vcf --known-sites {SITES_VAR}1000G_phase1.indels.b37.vcf"

rule recalibrate_bam:
     input:
        output + "{id}_{type}_sorted_dedupped.bam",
	output + "{id}_{type}_recal_data.table"
     output:
        output + "{id}_{type}_sorted_dedupped_calib.bam"
     shell:
       "gatk --java-options '-Xmx8G -Djava.io.tmpdir={tmp}' ApplyBQSR -I {input[0]} -R {REF_GENOME} --bqsr-recal-file {input[1]} -O {output}"

